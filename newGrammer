 PROG -> CODE PROG_2
 PROC_DEFS -> PROC PROC_DEFS_2
 PROC -> proc UserDefinedName { PROG }
 CODE -> INSTR CODE
 CODE ->
 CODE -> ; CODE
 INSTR -> halt
 INSTR -> IO
 INSTR -> VAR
 INSTR -> ASSIGN
 INSTR -> COND_BRANCH
 INSTR -> COND_LOOP
 CALC -> add ( NUMEXPR , NUMEXPR )
 CALC -> sub ( NUMEXPR , NUMEXPR )
 CALC -> mult ( NUMEXPR , NUMEXPR )
 NUMEXPR -> VAR
 NUMEXPR -> Number
 NUMEXPR -> CALC
 VAR -> UserDefinedName
 ASSIGN -> VAR = VAR_BRANCH
 IO -> input ( VAR )
 IO -> output ( VAR )
 BOOL -> eq ( VAR , VAR )
 BOOL -> ( VAR COM_SYMBOL VAR )
 BOOL -> and ( BOOL , BOOL )
 BOOL -> or ( BOOL , BOOL )
 BOOL -> not BOOL
 COND_BRANCH -> if ( BOOL ) then { CODE } ELSE_BRANCH 
 COND_LOOP -> while ( BOOL ) { CODE }
 COND_LOOP -> for ( VAR = 0 ; VAR < VAR ; VAR = add ( VAR , 1 ) ) { CODE }
 ELSE_BRANCH -> else { CODE }
 ELSE_BRANCH -> 
 VAR_BRANCH -> String
 VAR_BRANCH -> VAR
 VAR_BRANCH -> NEMEXPR
 PROG_2 -> 
 PROG_2 -> ; PROC
 PROC_DEFS_2 -> 
 PROC_DEFS_2 -> PROC_DEFS
 COM_SYMBOL -> <
 COM_SYMBOL -> >

 http://jsmachines.sourceforge.net/machines/ll1.html