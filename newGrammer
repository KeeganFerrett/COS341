 PROG -> CODE PROG_2
 PROC_DEFS -> PROC PROC_DEFS_2
 PROC -> proc UserDefinedName { PROG }
 CODE -> INSTR CODE
 CODE ->
 CODE -> ; CODE
 INSTR -> halt
 INSTR -> IO
 INSTR -> UserDefinedName
 INSTR -> ASSIGN
 INSTR -> COND_BRANCH
 INSTR -> COND_LOOP
 CALC -> add ( NUMEXPR , NUMEXPR )
 CALC -> sub ( NUMEXPR , NUMEXPR )
 CALC -> mult ( NUMEXPR , NUMEXPR )
 NUMEXPR -> UserDefinedName
 NUMEXPR -> Number
 NUMEXPR -> CALC
 ASSIGN -> UserDefinedName = VAR_BRANCH
 IO -> input ( UserDefinedName )
 IO -> output ( UserDefinedName )
 BOOL -> eq ( UserDefinedName , UserDefinedName )
 BOOL -> ( UserDefinedName COM_SYMBOL UserDefinedName )
 BOOL -> and ( BOOL , BOOL )
 BOOL -> or ( BOOL , BOOL )
 BOOL -> not BOOL
 COND_BRANCH -> if ( BOOL ) then { CODE } ELSE_BRANCH 
 COND_LOOP -> while ( BOOL ) { CODE }
 COND_LOOP -> for ( UserDefinedName = 0 ; UserDefinedName < UserDefinedName ; UserDefinedName = add ( UserDefinedName , 1 ) ) { CODE }
 ELSE_BRANCH -> else { CODE }
 ELSE_BRANCH -> 
 VAR_BRANCH -> String
 VAR_BRANCH -> UserDefinedName
 VAR_BRANCH -> NuMEXPR
 PROG_2 -> 
 PROG_2 -> ; PROC
 PROC_DEFS_2 -> 
 PROC_DEFS_2 -> PROC_DEFS
 COM_SYMBOL -> <
 COM_SYMBOL -> >